# This file provides some defaults for integration testing.
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: install
spec:
  meshConfig:
    accessLogFile: "/dev/stdout"
    defaultConfig:
      proxyMetadata:
        ISTIO_META_DNS_CAPTURE: "true"
  components:
    ingressGateways:
      - name: istio-ingressgateway
        enabled: true
        k8s:
          service:
            ports:
              ## Default ports
              - port: 15021
                targetPort: 15021
                name: status-port
              - port: 80
                targetPort: 8080
                name: http2
              - port: 443
                targetPort: 8443
                name: https
                # This is the port where sni routing happens
              - port: 15443
                targetPort: 15443
                name: tls
              ## Extra ports for testing
              - port: 15012
                targetPort: 15012
                name: tls-istiod
              - port: 15017
                targetPort: 15017
                name: tls-webhook
              - port: 31400
                targetPort: 31400
                name: tcp
    # Enable the egressgateway for all tests by default.
    egressGateways:
      - name: istio-egressgateway
        enabled: true
  values:
    sidecarInjectorWebhook:
      templates:
        grpc: |
          spec:
            initContainers:
            - name: grpc-bootstrap-init
              image: busybox:1.28
              volumeMounts:
              - mountPath: /var/lib/grpc/data/
                name: grpc-io-proxyless-bootstrap
              env:
              - name: INSTANCE_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              command:
              - sh
              - "-c"
              - |-
                  NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
                  echo '
                  {
                    "xds_servers": [
                      {
                        "server_uri": "dns:///istiod.istio-system.svc:15010",
                        "channel_creds": [{"type": "insecure"}],
                        "server_features" : ["xds_v3"]
                      }
                    ],
                    "node": {
                      "id": "'${NODE_ID}'",
                      "metadata": {
                        "GENERATOR": "grpc"
                      }
                    }
                  }' > /var/lib/grpc/data/bootstrap.json
            containers:
          {{- range $index, $container := .Spec.Containers }}
            - name: {{ $container.Name }}
              env:
                - name: GRPC_XDS_EXPERIMENTAL_V3_SUPPORT
                  value: "true"
                - name: GRPC_XDS_BOOTSTRAP
                  value: /var/lib/grpc/data/bootstrap.json
                - name: GRPC_GO_LOG_VERBOSITY_LEVEL 
                  value: "99"
                - name: GRPC_GO_LOG_SEVERITY_LEVEL
                  value: info 
              volumeMounts:
                - mountPath: /var/lib/grpc/data/
                  name: grpc-io-proxyless-bootstrap
            {{- end}}
            volumes:
            - name: grpc-io-proxyless-bootstrap
              emptyDir: {}
    global:
      proxy:
        resources:
          requests:
            cpu: 10m
            memory: 40Mi

    pilot:
      env:
        UNSAFE_ENABLE_ADMIN_ENDPOINTS: true
        PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY: true
        ENABLE_MULTICLUSTER_HEADLESS: true
        PILOT_REMOTE_CLUSTER_TIMEOUT: 15s

    gateways:
      istio-ingressgateway:
        autoscaleMax: 1
        resources:
          requests:
            cpu: 10m
            memory: 40Mi
      istio-egressgateway:
        autoscaleMax: 1
        resources:
          requests:
            cpu: 10m
            memory: 40Mi
